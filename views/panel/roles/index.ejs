<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no" />
	<meta http-equiv="X-UA-Compatible" content="ie=edge" />
	<link href="<%= GDPSID %>/css/index.css" rel="stylesheet" />
	<title>Роли | <%= GDPS %>
	</title>
	<link rel="stylesheet" href="https://cdn.forever-gdps.host/engines/transitions.css" />
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script src="<%= GDPSID %>/js/render.js"></script>
	<noscript>Включите JavaScript в браузере для корректной работы сайта</noscript>
	<forcehead>
		<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
		<script src="https://unpkg.com/swup@4"></script>
		<script src="https://unpkg.com/@swup/scripts-plugin@2"></script>
	</forcehead>
</head>

<body>
	<%- include("../../debugWindow") %>
	<main id="swup" class="transition-main">
		<style>
			body {
				text-align: center;
				display: block;
			}

			.badge {
				flex: 0 0 15%;
				/* Значок занимает 20% ширины контейнера */
				margin-right: 10px;
			}

			.text-content {
				flex: 1;
				/* Текст занимает оставшиеся 80% ширины контейнера */
			}

			.swal2-red-button {
				background-color: #e74c3c !important;
				transition: background-color 0.2s;
			}

			.swal2-red-button:hover {
				background-color: #c0392b !important;
			}

			.swal2-red-button:active {
				background-color: #a93226 !important;
			}

			.swal2-def-button {
				background-color: #7066e0 !important;
				transition: background-color 0.2s;
			}

			.swal2-def-button:hover {
				background-color: #6057c0 !important;
			}

			.swal2-def-button:active {
				background-color: #4c4598 !important;
			}

			@media (min-width: 768px) {

				/* pc */
				.container {
					border: 2px solid rgb(159, 157, 157);
					margin: 15px 380px 0px 380px;
					padding: 40px 30px 40px 30px;
					display: flex;
					/*width: 80%;*/
					align-items: center;
				}
			}

			@media (max-width: 767px) {

				/* mobile */
				.container {
					border: 2px solid rgb(159, 157, 157);
					margin: 15px 20px 0px 20px;
					padding: 40px 30px 40px 30px;
					display: flex;
					align-items: center;
				}

				input[sa] {
					width: 200px;
				}
			}

			button {
				margin: 10px 0px 0px 0px;
			}
		</style>
		<h1>Роли</h1>
		<button id="create">Создать роль</button>
		<br>
		<button id="back">Назад</button>
		<br><br>
		<div id="get-roles"></div>
		<br><br><br><br><br>
		<script>

			async function getRoles() {
				// $('#get-roles').html("Загрузка таблицы ролей...");
				const res = await sendPost('<%= GDPSID %>/panel/roles', {});
				$('#get-roles').html(res);
				return;
			}
			function editRole(roleID) {
				swup.navigate(`<%= GDPSID %>/panel/roles/edit/${roleID}`);
				return;
			}
			function changeRole(roleID, rolename) {
				Swal.fire({
					title: `Выдать / снять роль`,
					html: `
					Название роли: ${rolename}
					<input sa type="text" id="playername" class="swal2-input" placeholder="Никнейм игрока" autocomplete="off">
					<button id="set" class="swal2-confirm swal2-styled swal2-def-button">Выдать</button>
					<button id="unset" class="swal2-confirm swal2-styled swal2-red-button">Снять</button>
				`,
					showCancelButton: true,
					cancelButtonText: 'Отмена',
					showConfirmButton: false,
					didOpen: () => {
						$('#set').click(function () {
							async function sendQuery(params) {
								const query = await sendPost('<%= GDPSID %>/panel/roles/handrole', params);
								if (query == "1") {
									Swal.fire({
										icon: 'success',
										title: 'Успешно',
										text: `Роль ${rolename} выдана игроку ${$('#playername').val()}`
									});
									getRoles();
								} else {
									Swal.fire({
										icon: 'error',
										title: 'Ошибка',
										html: `
										Роль не выдана: возможно, у игрока уже есть роль либо такого игрока не существует
										<br><br>
										<button id="error-back" class="swal2-confirm swal2-styled swal2-def-button">Назад</button>
									`,
										showCancelButton: true,
										cancelButtonText: 'Отмена',
										showConfirmButton: false,
										didOpen: () => {
											$('#error-back').click(function () {
												$(`#set-${roleID}`).click();
											});
										}
									});
								}
							}
							const params = {
								target: $('#playername').val(),
								action: 1,
								roleID: roleID
							};
							sendQuery(params);
						});

						$('#unset').click(function () {
							async function sendQuery(params) {
								const query = await sendPost('<%= GDPSID %>/panel/roles/handrole', params);
								if (query == "1") {
									Swal.fire({
										icon: 'success',
										title: 'Успешно',
										text: `Роль ${rolename} снята у игрока ${$('#playername').val()}`
									});
									getRoles();
								} else {
									Swal.fire({
										icon: 'error',
										title: 'Ошибка',
										html: `
										Роль не снята: возможно, у игрока нет такой роли либо такого игрока не существует
										<br><br>
										<button id="error-back" class="swal2-confirm swal2-styled swal2-def-button">Назад</button>
									`,
										showCancelButton: true,
										cancelButtonText: 'Отмена',
										showConfirmButton: false,
										didOpen: () => {
											$('#error-back').click(function () {
												$(`#set-${roleID}`).click();
											});
										}
									});
								}
							}
							const params = {
								target: $('#playername').val(),
								action: 2,
								roleID: roleID
							};
							sendQuery(params);
						});
					}
				});
			}

			function deleteRole(roleID, rolename) {
				if (confirm("Вы уверены, что хотите удалить роль?")) {
					console.log('yeah');
					async function sendQuery() {
						const res = await sendPost('<%= GDPSID %>/panel/roles/delete', { roleID: roleID });
						if (res == "1") {
							Swal.fire({
								icon: 'success',
								title: 'Успешно',
								html: `
										Роль <b>${rolename}</b> успешно удалена
										<br>
									`,
								showCancelButton: true,
								cancelButtonText: 'ОК',
								showConfirmButton: false,
							});
						} else {
							Swal.fire({
								icon: 'error',
								title: 'Ошибка',
								html: `
										Роль <b>${rolename}</b> не удалена. Если у вас есть все права на это действие, уточните ошибку у создателя GDPS или у разработчика ядра
										<br>
									`,
								showCancelButton: true,
								cancelButtonText: 'ОК',
								showConfirmButton: false,
							});
						}
					}
					sendQuery();
					setTimeout( () => {
						getRoles();
					}, 300 )
				} else {
					console.log('nope');
				}
			}
			$(document).ready(function () {
				console.clear();
				var _0x4838c2 = _0x2b6f; (function (_0x123688, _0x3ca404) { var _0xe6a271 = _0x2b6f, _0x5e0ec8 = _0x123688(); while (!![]) { try { var _0x33917f = parseInt(_0xe6a271(0xa1)) / 0x1 * (-parseInt(_0xe6a271(0x9c)) / 0x2) + parseInt(_0xe6a271(0x9f)) / 0x3 * (parseInt(_0xe6a271(0x9d)) / 0x4) + parseInt(_0xe6a271(0xa0)) / 0x5 + -parseInt(_0xe6a271(0xa6)) / 0x6 + parseInt(_0xe6a271(0xa5)) / 0x7 * (-parseInt(_0xe6a271(0xa2)) / 0x8) + -parseInt(_0xe6a271(0xa7)) / 0x9 * (parseInt(_0xe6a271(0x9b)) / 0xa) + -parseInt(_0xe6a271(0x9a)) / 0xb * (-parseInt(_0xe6a271(0xa3)) / 0xc); if (_0x33917f === _0x3ca404) break; else _0x5e0ec8['push'](_0x5e0ec8['shift']()); } catch (_0x5e7ff6) { _0x5e0ec8['push'](_0x5e0ec8['shift']()); } } }(_0x179e, 0x93127), console[_0x4838c2(0x9e)](_0x4838c2(0xa4))); function _0x2b6f(_0x2d2ae0, _0x176962) { var _0x179e46 = _0x179e(); return _0x2b6f = function (_0x2b6f3d, _0x30ae03) { _0x2b6f3d = _0x2b6f3d - 0x9a; var _0x4e514e = _0x179e46[_0x2b6f3d]; return _0x4e514e; }, _0x2b6f(_0x2d2ae0, _0x176962); } function _0x179e() { var _0x336ad3 = ['14377154bHucWH', '20VbRNwy', '4VPDlkN', '172lUyoXB', 'warn', '81276rOsCcb', '2569465YFJFIC', '50503ptGtIs', '8224784rfOmLc', '12hGuGHz', 'SwupDOM\x20loaded\x20after\x20all\x20scripts', '7vwSrfN', '3786336iRYKUJ', '2804832yoYRqz']; _0x179e = function () { return _0x336ad3; }; return _0x179e(); }
				getRoles();

				$('#create').click(function () {
					swup.navigate('<%= GDPSID %>/panel/roles/create');
				});
				$('#back').click(function () {
					swup.navigate('<%= GDPSID %>/panel');
				});
			});
		</script>
	</main>
</body>
<script>
	var swup = new Swup({
		containers: ["#swup", "forcehead"],
		linkSelector: 'a[soft]',
		cache: false,
		plugins: [
			new SwupScriptsPlugin()
		]
	});


</script>

</html>