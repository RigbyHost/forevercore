<meta name="google" content="notranslate">
    <style>
        /*body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }*/
        .version {
            position: fixed;
            bottom: 10px;
            left: 10px;
            background: rgba(0,0,0,0.6);
            color: white;
            padding: 5px;
            border-radius: 5px;
            font-size: 14px;
        } 
        #fpsContainer,
        #infoContainer,
        #serverLifeContainer {
            position: fixed; 
            left: 10px; 
            background: rgba(0,0,0,0.6); 
            z-index: 9999;
            color: white; 
            padding: 5px; 
            white-space: pre-wrap;
            text-align: left;
        }
        #fpsContainer {
            top: 10px;
        }
        #infoContainer {
            top: calc(40px + 1em);
        }
        #serverLifeContainer {
            top: calc(120px + 2em);
        }
        @media screen and (max-width: 768px) {
            #fpsContainer,
            #infoContainer,
            #serverLifeContainer {
                font-size: 12px;
                padding: 3px;
            }
            #serverLifeContainer {
				text-align: right;
				right: 10px;
            }
            #infoContainer {
                top: calc(30px + 0.8em);
                /* top: 10px; */
            }
            #serverLifeContainer {
                /* top: calc(83px + 1.5em); */
                top: 10px;
                left: auto;
            }
            .version {
                font-size: 10px;
            }
        }
        @media screen and (max-width: 480px) {
            #fpsContainer,
            #infoContainer,
            #serverLifeContainer {
                font-size: 10px;
                padding: 2px;
            }
            #serverLifeContainer {
				text-align: right;
            }
            #infoContainer {
                top: calc(30px + 0.5em);
            }
            #serverLifeContainer {
               /* top: calc(83px + 1em); */
               right: 10px;
               top: 10px;
               left: auto;
            }
            .version {
                font-size: 10px;
            }
        }
    </style>
    <div id="fpsContainer">FPS: 0</div>
    <div id="infoContainer"></div>
    <div id="serverLifeContainer"></div>
    <div class="version">Alpha a1.4.1</div>
    
    <script>
		const percentageCounter = (min, max) => {
			return 100 * min / max;
		}
        let frameCount = 0;
        let startTime = performance.now();
        function updateFPS() {
            frameCount++;
            const currentTime = performance.now();
            const elapsedTime = (currentTime - startTime) / 1000;

            if (elapsedTime >= 1) {
                const fps = frameCount / elapsedTime;
                frameCount = 0;
                startTime = currentTime;

                $('#fpsContainer').html(`FPS: ${fps.toFixed(2)}`);
            }

            requestAnimationFrame(updateFPS);
        }

        function updateSystemInfo() {
            const screenInfo = `Screen: ${screen.width}x${screen.height}\n`;
            const windowInfo = `Window: ${window.innerWidth}x${window.innerHeight}\n`;

            const timing = performance.timing;
            const performanceInfo = `Load time: ${(timing.loadEventEnd - timing.navigationStart) / 1000}s\n`;

            navigator.getBattery().then((battery) => {
                const batteryInfo = `Battery: ${Math.round(battery.level * 100)}%\nCharging: ${battery.charging}\n`;
                const memoryInfo = `Device Memory: ${navigator.deviceMemory || 'N/A'} GB\n`;

                const infoText = windowInfo + performanceInfo + batteryInfo;
                $('#infoContainer').html(infoText);
            });
        }
   
        async function getServerLifeInfo() {
            const res = await sendPostJSON('<%= GDPSID %>/serverlife', {});
            let serverLifeInfo;
            console.log(percentageCounter(res.UsedMemory, res.AllocatedMemory));
            if (percentageCounter(res.UsedMemory, res.AllocatedMemory) < 75) {
            serverLifeInfo = `Allocated Memory: ${res.AllocatedMemory} MB
Used Memory: ${res.UsedMemory} MB
Heap Total: ${res.HeapTotal} MB
Heap Used: ${res.HeapUsed} MB
Buffer Memory: ${res.BufferMemory} MB
Node Memory: ${res.MachineTotalMemory} MB`;
            } else {
		serverLifeInfo = `Allocated Memory: ${res.AllocatedMemory} MB
<font color="#ff5e5e">Used Memory: ${res.UsedMemory} MB</font>
Heap Total: ${res.HeapTotal} MB
Heap Used: ${res.HeapUsed} MB
Buffer Memory: ${res.BufferMemory} MB
Node Memory: ${res.MachineTotalMemory} MB`;
            }
            $('#serverLifeContainer').html(serverLifeInfo); 
        }

        requestAnimationFrame(updateFPS);
        setInterval(updateSystemInfo, 1000);
        setInterval(getServerLifeInfo, 700);
    </script>
